/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Stack;
import javafx.util.Pair;

/**
 *
 * @author murugappansekar
 */
public class CalcBG extends javax.swing.JFrame {

    public double ans=0;
    public boolean decimal=false;
    int bopen=0;
    int error=0;
    /**
     * Creates new form CalcBG
     */
    public CalcBG() {
        initComponents();
    }
    public class MyPair
{
    private final double key;
    private final char op;
    private final boolean value;

    public MyPair(double aKey, char a,boolean aValue)
    {
        key   = aKey;
        op=a;
        value = aValue;
    }

    public double key()   { return key; }
    public boolean value() { return value; }
    public char opGet(){ return op; }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ansBox = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        powerButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        delButton = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b0 = new javax.swing.JButton();
        bDP = new javax.swing.JButton();
        bEquals = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        bpow = new javax.swing.JButton();
        ansButton = new javax.swing.JButton();
        bOpen = new javax.swing.JButton();
        bClose = new javax.swing.JButton();
        bPlus = new javax.swing.JButton();
        bMinus = new javax.swing.JButton();
        bMul = new javax.swing.JButton();
        bDiv = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setPreferredSize(new java.awt.Dimension(335, 357));
        setResizable(false);

        ansBox.setBackground(java.awt.Color.white);
        ansBox.setOpaque(true);

        jPanel1.setLayout(new java.awt.GridLayout(5, 3, 1, 1));

        powerButton.setText("ON");
        powerButton.setToolTipText("");
        powerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerButtonActionPerformed(evt);
            }
        });
        jPanel1.add(powerButton);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        jPanel1.add(clearButton);

        delButton.setText("DEL");
        delButton.setToolTipText("");
        delButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButtonActionPerformed(evt);
            }
        });
        jPanel1.add(delButton);

        b7.setText("7");
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });
        jPanel1.add(b7);

        b8.setText("8");
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });
        jPanel1.add(b8);

        b9.setText("9");
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });
        jPanel1.add(b9);

        b4.setText("4");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });
        jPanel1.add(b4);

        b5.setText("5");
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });
        jPanel1.add(b5);

        b6.setText("6");
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });
        jPanel1.add(b6);

        b1.setText("1");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });
        jPanel1.add(b1);

        b2.setText("2");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });
        jPanel1.add(b2);

        b3.setText("3");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });
        jPanel1.add(b3);

        b0.setText("0");
        b0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b0ActionPerformed(evt);
            }
        });
        jPanel1.add(b0);

        bDP.setText(".");
        bDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDPActionPerformed(evt);
            }
        });
        jPanel1.add(bDP);

        bEquals.setText("=");
        bEquals.setToolTipText("");
        bEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEqualsActionPerformed(evt);
            }
        });
        jPanel1.add(bEquals);

        jPanel2.setMinimumSize(new java.awt.Dimension(125, 62));
        jPanel2.setPreferredSize(new java.awt.Dimension(126, 91));
        jPanel2.setLayout(new java.awt.GridLayout(2, 2));

        bpow.setText("^");
        bpow.setToolTipText("");
        bpow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpowActionPerformed(evt);
            }
        });
        jPanel2.add(bpow);

        ansButton.setText("ANS");
        ansButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ansButtonActionPerformed(evt);
            }
        });
        jPanel2.add(ansButton);

        bOpen.setText("(");
        bOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOpenActionPerformed(evt);
            }
        });
        jPanel2.add(bOpen);

        bClose.setText(")");
        bClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCloseActionPerformed(evt);
            }
        });
        jPanel2.add(bClose);

        bPlus.setText("+");
        bPlus.setToolTipText("");
        bPlus.setPreferredSize(new java.awt.Dimension(62, 31));
        bPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPlusActionPerformed(evt);
            }
        });

        bMinus.setText("-");
        bMinus.setPreferredSize(new java.awt.Dimension(60, 42));
        bMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMinusActionPerformed(evt);
            }
        });

        bMul.setText("*");
        bMul.setPreferredSize(new java.awt.Dimension(60, 42));
        bMul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMulActionPerformed(evt);
            }
        });

        bDiv.setText("/");
        bDiv.setPreferredSize(new java.awt.Dimension(60, 42));
        bDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDivActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ansBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bMul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bDiv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(ansBox, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bMul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bDiv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 12, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bPlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void powerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_powerButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        ansBox.setText("");
        decimal=false;
        bopen=0;
    }//GEN-LAST:event_clearButtonActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        addToAns('7');
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        addToAns('8');
    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        addToAns('9');
    }//GEN-LAST:event_b9ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        addToAns('4');
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        addToAns('5');
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        addToAns('6');
    }//GEN-LAST:event_b6ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        addToAns('1');
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        addToAns('2');
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        addToAns('3');
    }//GEN-LAST:event_b3ActionPerformed

    private void b0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b0ActionPerformed
        addToAns('0');
    }//GEN-LAST:event_b0ActionPerformed

    private void bDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDPActionPerformed
        if(!decimal)
            addToAns('.');
        decimal=true;
    }//GEN-LAST:event_bDPActionPerformed

    private void bOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOpenActionPerformed
        // TODO add your handling code here:
        addToAns('(');
        bopen++;
    }//GEN-LAST:event_bOpenActionPerformed

    private void bCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCloseActionPerformed
        if(bopen>0){
            addToAns(')');
            bopen--;
        }
    }//GEN-LAST:event_bCloseActionPerformed

    private void bpowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpowActionPerformed
        addToAns('^');
    }//GEN-LAST:event_bpowActionPerformed

    private void bPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPlusActionPerformed
        addToAns('+');
    }//GEN-LAST:event_bPlusActionPerformed

    private void bMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMinusActionPerformed
        addToAns('-');
    }//GEN-LAST:event_bMinusActionPerformed

    private void bMulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMulActionPerformed
        addToAns('*');
    }//GEN-LAST:event_bMulActionPerformed

    private void bDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDivActionPerformed
        addToAns('/');
    }//GEN-LAST:event_bDivActionPerformed

    private void ansButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ansButtonActionPerformed
        addToAns('$');
    }//GEN-LAST:event_ansButtonActionPerformed

    private void delButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButtonActionPerformed
        String cur=ansBox.getText();
        if (cur != null && cur.length() > 0) {
            char l=cur.charAt(cur.length()-1);
            
            cur = cur.substring(0, cur.length() - 1);
            if(l=='(')
                bopen--;
            else if(l==')')
                bopen++;
            else if(l=='.')
                decimal=false;
                
    }
        ansBox.setText(cur);
        
    }//GEN-LAST:event_delButtonActionPerformed

    private void bEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEqualsActionPerformed
        // TODO add your handling code here:
        String cur=ansBox.getText();
        if(cur.equals("Math error") || cur.equals("Syntax error"))
            return;
        ArrayList <MyPair> l =new ArrayList <MyPair> ();
        boolean has=false;
        int ptr=-1;
        for(int i=0;i<cur.length();i++){
            char temp=cur.charAt(i);
            if((temp>='0' && temp<='9') || temp=='.'){
                if(ptr==-1)
                    ptr=i;
            }else if(temp=='$'){
                if(ptr!=-1)
                    l.add(new MyPair(Double.parseDouble(cur.substring(ptr,i)),'a',false));
                ptr=-1;
                    l.add(new MyPair(ans,'a',false));
                
            }else{
                if(ptr!=-1)
                    l.add(new MyPair(Double.parseDouble(cur.substring(ptr,i)),'a',false));
                ptr=-1;
                l.add(new MyPair((double)0,temp,true));
            }
        }
        if(ptr!=-1){
            l.add(new MyPair(Double.parseDouble(cur.substring(ptr,cur.length())),'a',false));
            ptr=-1;
        }
        cur="";
        ArrayList <MyPair> post =new ArrayList <MyPair> ();
        Stack<MyPair> st=new Stack<MyPair>();
        for(int i=0;i<l.size();i++){
            boolean val=l.get(i).value();
            if(!val){
                post.add(l.get(i));
            }else{
                switch(l.get(i).opGet()){
                    case ')':
                        while(!st.empty() && st.peek().opGet()!='(')
                            post.add(st.pop());
                        st.pop();
                        break;
                    case '(':
                        st.push(l.get(i));
                        break;
                    case '^':
                        while(!st.empty() && st.peek().opGet()!='(' && st.peek().opGet()=='^' )
                            post.add(st.pop());
                        st.push(l.get(i));
                        break;
                    case '*':
                        while(!st.empty() && st.peek().opGet()!='(' && (st.peek().opGet()=='^' || st.peek().opGet()=='*' || st.peek().opGet()=='/'))
                            post.add(st.pop());
                        st.push(l.get(i));
                        break;
                    case '/':
                        while(!st.empty() && st.peek().opGet()!='(' && (st.peek().opGet()=='^' || st.peek().opGet()=='*' || st.peek().opGet()=='/'))
                            post.add(st.pop());
                        st.push(l.get(i));
                        break;
                    case '+':
                        while(!st.empty() && st.peek().opGet()!='(' && (st.peek().opGet()=='^' || st.peek().opGet()=='*' || st.peek().opGet()=='/' || st.peek().opGet()=='-' || st.peek().opGet()=='+'))
                            post.add(st.pop());
                        st.push(l.get(i));
                        break;
                        
                    case '-':
                        while(!st.empty() && st.peek().opGet()!='(' && (st.peek().opGet()=='^' || st.peek().opGet()=='*' || st.peek().opGet()=='/' || st.peek().opGet()=='-' || st.peek().opGet()=='+'))
                            post.add(st.pop());
                        st.push(l.get(i));
                        break;
                }
            }
        }
        cur="";
        ans=0;
        while(!st.empty())
            post.add(st.pop());
        error=0;
        try{
            for(int i=0;i<post.size() && error==0;i++){
            if(post.get(i).value()){
                if(st.size()<2){
                    error=1;
                    break;
                }
                double val2=st.peek().key();
                st.pop();
                double val1=st.peek().key();
                st.pop();
                switch(post.get(i).opGet()){
                    case '+':
                        val1+=val2;
                        break;
                    case '-':
                        val1-=val2;
                        break;
                    case '*':
                        val1*=val2;
                        break;
                    case '/':
                        System.out.println(val1+"  "+val2);
                        if(val2==0)
                            error=2;
                        val1/=val2;
                        break;
                    case '^':
                        val1=Math.pow(val1,val2);
                        break;
                    
                }
                st.push(new MyPair(val1,'a',false));
            }
            else
                st.push(post.get(i));
                System.out.println(post.get(i).key());
            }
            if(error==1 || st.size()!=1)
                cur="Syntax Error";
            else if(error==2)
                cur="Math Error";
            else
                cur=""+st.peek().key();
        }
        catch(Exception e){
            cur="Math Error";
        }
        
        ansBox.setText(cur);
    }//GEN-LAST:event_bEqualsActionPerformed
    private void addToAns(char num){
        String cur=ansBox.getText();
        if(error!=0)
        {
            error=0;
            cur="";
        }
        cur+=num;
        ansBox.setText(cur);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalcBG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalcBG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalcBG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalcBG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalcBG().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ansBox;
    private javax.swing.JButton ansButton;
    private javax.swing.JButton b0;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton bClose;
    private javax.swing.JButton bDP;
    private javax.swing.JButton bDiv;
    private javax.swing.JButton bEquals;
    private javax.swing.JButton bMinus;
    private javax.swing.JButton bMul;
    private javax.swing.JButton bOpen;
    private javax.swing.JButton bPlus;
    private javax.swing.JButton bpow;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton delButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton powerButton;
    // End of variables declaration//GEN-END:variables
}
